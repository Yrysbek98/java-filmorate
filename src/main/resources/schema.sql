CREATE TABLE IF NOT EXISTS USERS (
   USER_ID INT PRIMARY KEY AUTO_INCREMENT,
   EMAIL VARCHAR(255),
   LOGIN VARCHAR(255) NOT NULL,
   NAME VARCHAR(255),
   BIRTHDAY TIMESTAMP
);

CREATE TABLE IF NOT EXISTS FRIENDS (
   USER_ID INT,
   FRIEND_ID INT,
   PRIMARY KEY (USER_ID, FRIEND_ID),
   CONSTRAINT fk_user FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID),
   CONSTRAINT fk_friend FOREIGN KEY (FRIEND_ID) REFERENCES USERS(USER_ID)
);

CREATE TABLE IF NOT EXISTS MPA (
    MPA_ID INT PRIMARY KEY AUTO_INCREMENT,
    MPA_NAME VARCHAR(30) NOT NULL
);

CREATE TABLE IF NOT EXISTS FILMS (
   FILM_ID INT PRIMARY KEY AUTO_INCREMENT,
   NAME VARCHAR(255) NOT NULL,
   DESCRIPTION TEXT,
   RELEASE_DATE TIMESTAMP,
   DURATION DOUBLE,
   MPA_ID INTEGER,
   CONSTRAINT fk_mpa FOREIGN KEY (MPA_ID) REFERENCES MPA(MPA_ID)
);

CREATE TABLE IF NOT EXISTS GENRES (
    GENRE_ID INT PRIMARY KEY AUTO_INCREMENT,
    GENRE_NAME VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS FILM_GENRES (
    FILM_ID INT,
    GENRE_ID INT,
    PRIMARY KEY (FILM_ID, GENRE_ID),
    CONSTRAINT fk_film FOREIGN KEY (FILM_ID) REFERENCES FILMS(FILM_ID),
    CONSTRAINT fk_genre FOREIGN KEY (GENRE_ID) REFERENCES GENRES(GENRE_ID)
);

CREATE TABLE IF NOT EXISTS LIKES (
    FILM_ID INT,
    USER_ID INT,
    PRIMARY KEY (FILM_ID, USER_ID),
    CONSTRAINT l_film_id FOREIGN KEY (FILM_ID) REFERENCES FILMS(FILM_ID),
    CONSTRAINT l_user_id FOREIGN KEY (USER_ID) REFERENCES USERS(USER_ID)
);